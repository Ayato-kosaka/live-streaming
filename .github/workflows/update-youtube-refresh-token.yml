name: Update YouTube OAuth Refresh Token

on:
  # ÊâãÂãï„Éà„É™„Ç¨„ÉºÁî®„ÄÇauth_code „ÇíÂèñÂæó„Åó„ÅüÂæå„ÄÅÊâãÂãï„ÅßÂÆüË°å„Åô„Çã
  # @see https://github.com/Ayato-kosaka/live-streaming/issues/13#issuecomment-2795265041
  workflow_dispatch:
    inputs:
      auth_code:
        description: 'Google OAuth Ë™çË®ºÂæå„Å´Âæó„Çâ„Çå„Åü "code" „Éë„É©„É°„Éº„Çø'
        required: true

jobs:
  exchange-code-and-update-secret:
    name: Exchange Auth Code & Update Secret
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Google OAuth „Éà„Éº„ÇØ„É≥„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„Å∏ POST „Åó„Å¶„ÄÅrefresh_token „ÇíÂèñÂæó
      - name: Exchange auth_code for refresh_token
        id: fetch_token
        run: |
          echo "üîê ÂèñÂæó‰∏≠: Google OAuth „Éà„Éº„ÇØ„É≥..."

          # Google OAuth „Éà„Éº„ÇØ„É≥ÂèñÂæó„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„Å´„É™„ÇØ„Ç®„Çπ„Éà
          RESPONSE=$(curl -s -X POST https://oauth2.googleapis.com/token \
            -d client_id="${{ secrets.YOUTUBE_CLIENT_ID }}" \
            -d client_secret="${{ secrets.YOUTUBE_CLIENT_SECRET }}" \
            -d code="${{ github.event.inputs.auth_code }}" \
            -d grant_type=authorization_code \
            -d redirect_uri="https://oauth2.example.com/callback")

          echo "„É¨„Çπ„Éù„É≥„Çπ„ÇíÂèó‰ø° ‚úÖ"

          # refresh_token „ÇíÊäΩÂá∫Ôºàjq „Åß JSON „Éë„Éº„ÇπÔºâ
          REFRESH_TOKEN=$(echo "$RESPONSE" | jq -r '.refresh_token')

          # „Ç®„É©„Éº„Éè„É≥„Éâ„É™„É≥„Ç∞Ôºörefresh_token „ÅåÂèñ„Çå„Å™„Åã„Å£„ÅüÂ†¥Âêà
          if [[ -z "$REFRESH_TOKEN" || "$REFRESH_TOKEN" == "null" ]]; then
            echo "‚ùå refresh_token „ÅÆÂèñÂæó„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇauth_code „Åæ„Åü„ÅØË™çË®ºÊÉÖÂ†±„ÇíÂÜçÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ"
            echo "„É¨„Çπ„Éù„É≥„ÇπÂÜÖÂÆπ: $RESPONSE"
            exit 1
          fi

          # Ê©üÂØÜÊÉÖÂ†±„ÅÆ„Éû„Çπ„ÇØÂá∫ÂäõÔºàGitHub Actions„É≠„Ç∞‰∏ä„Å´Âá∫„Åï„Å™„ÅÑÔºâ
          echo "::add-mask::$REFRESH_TOKEN"

          # Ê¨°„ÅÆ„Çπ„ÉÜ„ÉÉ„Éó„Åß‰Ωø„Åà„Çã„Çà„ÅÜ„Å´Âá∫Âäõ
          echo "refresh_token=$REFRESH_TOKEN" >> $GITHUB_OUTPUT
          
      # 2Ô∏è‚É£ GitHub API „Çí‰Ωø„Å£„Å¶„ÄÅGitHub Secrets (YOUTUBE_REFRESH_TOKEN) „ÇíÊõ¥Êñ∞
      - name: Update GitHub Secret (YOUTUBE_REFRESH_TOKEN)
        run: |
          echo "YOUTUBE_REFRESH_TOKEN=${{ steps.fetch_token.outputs.refresh_token }}" >> $GITHUB_ENV
          curl -X PUT https://api.github.com/repos/${{ github.repository }}/actions/secrets/YOUTUBE_REFRESH_TOKEN \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"encrypted_value\":\"$(echo -n "${{ steps.fetch_token.outputs.refresh_token }}" | base64)\", \"key_id\":\"${{ secrets.GITHUB_KEY_ID }}\"}"

      # 3Ô∏è‚É£ Êõ¥Êñ∞Âæå„ÄÅfirebase-functions-deploy.yml „Çí„Ç≠„ÉÉ„ÇØ„Åó„Å¶„Éá„Éó„É≠„Ç§ÂÆüË°å
      - name: Trigger Firebase Functions Deploy Workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: firebase-functions-deploy.yml
          token: ${{ secrets.GITHUB_TOKEN }}

